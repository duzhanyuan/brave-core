diff --git a/chrome/browser/ui/content_settings/content_setting_image_model.cc b/chrome/browser/ui/content_settings/content_setting_image_model.cc
index 366ba05a508c8e5f77bd0a380ff229da73065819..2e802ac73dc304b9787a193117b7116494dfe2fc 100644
--- a/chrome/browser/ui/content_settings/content_setting_image_model.cc
+++ b/chrome/browser/ui/content_settings/content_setting_image_model.cc
@@ -10,6 +10,9 @@
 #include "base/feature_list.h"
 #include "base/macros.h"
 #include "base/metrics/histogram_macros.h"
+#if defined(BRAVE_CHROMIUM_BUILD)
+#include "brave/grit/brave_generated_resources.h"
+#endif
 #include "build/build_config.h"
 #include "chrome/app/vector_icons/vector_icons.h"
 #include "chrome/browser/browser_process.h"
@@ -161,6 +164,7 @@ const ContentSettingsImageDetails kImageDetails[] = {
     {CONTENT_SETTINGS_TYPE_PPAPI_BROKER, kExtensionIcon,
      IDS_BLOCKED_PPAPI_BROKER_MESSAGE, 0, IDS_ALLOWED_PPAPI_BROKER_MESSAGE},
     {CONTENT_SETTINGS_TYPE_SOUND, kTabAudioIcon, IDS_BLOCKED_SOUND_TITLE, 0, 0},
+    {CONTENT_SETTINGS_TYPE_AUTOPLAY, kExtensionIcon, IDS_BLOCKED_AUTOPLAY_TITLE, 0, 0},
 };
 
 const ContentSettingsImageDetails* GetImageDetails(ContentSettingsType type) {
@@ -259,6 +263,9 @@ ContentSettingImageModel::CreateForContentType(ImageType image_type) {
       return std::make_unique<ContentSettingFramebustBlockImageModel>();
     case ImageType::CLIPBOARD_READ:
       return std::make_unique<ContentSettingClipboardReadImageModel>();
+    case ImageType::AUTOPLAY:
+      return std::make_unique<ContentSettingBlockedImageModel>(
+          ImageType::AUTOPLAY, CONTENT_SETTINGS_TYPE_AUTOPLAY);
     case ImageType::NUM_IMAGE_TYPES:
       break;
   }
@@ -732,6 +739,7 @@ ContentSettingImageModel::GenerateContentSettingImageModels() {
       ImageType::SOUND,
       ImageType::FRAMEBUST,
       ImageType::CLIPBOARD_READ,
+      ImageType::AUTOPLAY,
   };
 
   std::vector<std::unique_ptr<ContentSettingImageModel>> result;
