diff --git a/third_party/blink/renderer/core/html/media/autoplay_policy.cc b/third_party/blink/renderer/core/html/media/autoplay_policy.cc
index b46d047161d41aae70b8485a2b95a38bbb8c3e4d..a031f9d8e3dc5e858754bca082965ffa8a29204c 100644
--- a/third_party/blink/renderer/core/html/media/autoplay_policy.cc
+++ b/third_party/blink/renderer/core/html/media/autoplay_policy.cc
@@ -17,6 +17,7 @@
 #include "third_party/blink/renderer/core/html/media/html_media_element.h"
 #include "third_party/blink/renderer/core/inspector/console_message.h"
 #include "third_party/blink/renderer/core/page/page.h"
+#include "third_party/blink/renderer/modules/permissions/permission_utils.h"
 #include "third_party/blink/renderer/platform/network/network_state_notifier.h"
 #include "third_party/blink/renderer/platform/runtime_enabled_features.h"
 #include "third_party/blink/renderer/platform/wtf/assertions.h"
@@ -341,6 +342,11 @@ bool AutoplayPolicy::IsGestureNeededForPlaybackIfPendingUserGestureIsLocked()
   if (element_->GetLoadType() == WebMediaPlayer::kLoadTypeMediaStream)
     return false;
 
+#if defined(BRAVE_CHROMIUM_BUILD)
+  if (IsAutoplayAllowedPerSettings())
+    return false;
+#endif
+
   // We want to allow muted video to autoplay if:
   // - the flag is enabled;
   // - Data Saver is not enabled;
@@ -414,9 +420,29 @@ bool AutoplayPolicy::IsAutoplayAllowedPerSettings() const {
   LocalFrame* frame = element_->GetDocument().GetFrame();
   if (!frame)
     return false;
+
+  mojom::blink::PermissionServicePtr permission_service;
+
+  ConnectToPermissionService(element_->GetDocument().ContextDocument(),
+                             mojo::MakeRequest(&permission_service));
+
+  if (permission_service.get()) {
+    permission_service->RequestPermission(
+      CreatePermissionDescriptor(mojom::blink::PermissionName::AUTOPLAY),
+      true, WTF::Bind(&AutoplayPolicy::HandleAutoplayWithPermission,
+                       WrapWeakPersistent(this)));
+  }
+
   return frame->GetContentSettingsClient()->AllowAutoplay(true);
 }
 
+void AutoplayPolicy::HandleAutoplayWithPermission(
+    mojom::blink::PermissionStatus status) const {
+  if (status == mojom::blink::PermissionStatus::GRANTED) {
+    element_->Play();
+  }
+}
+
 bool AutoplayPolicy::ShouldAutoplay() {
   if (element_->GetDocument().IsSandboxed(kSandboxAutomaticFeatures))
     return false;
